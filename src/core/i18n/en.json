{
  "commands": {
    "forward": { "description": "Move the turtle forward by a number of steps." },
    "fd": { "description": "Alias for forward." },
    "move": { "description": "Alias for forward." },
    "back": { "description": "Move the turtle backward by a number of steps." },
    "bk": { "description": "Alias for back." },
    "left": { "description": "Turn the turtle left by a number of degrees." },
    "lt": { "description": "Alias for left." },
    "right": { "description": "Turn the turtle right by a number of degrees." },
    "rt": { "description": "Alias for right." },
    "turn": { "description": "Turn the turtle by a number of degrees (positive is right, negative is left)." },
    "arc": { "description": "Move the turtle in an arc with a given radius and angle." },
    "start": { "description": "Reset the turtle to the starting position." },
    "penDown": { "description": "Lower the pen to start drawing." },
    "penUp": { "description": "Lift the pen to stop drawing." },
    "beginPath": { "description": "Begin a new drawing path." },
    "closePath": { "description": "Close the current drawing path." },
    "stroke": { "description": "Draw the outline of the current path." },
    "fill": { "description": "Fill the current path." },
    "fillText": { "description": "Draw filled text at the turtle's position." },
    "strokeText": { "description": "Draw outlined text at the turtle's position." },
    "setStrokeStyle": { "description": "Set the stroke color or style." },
    "setStrokeColorRGB": { "description": "Set the stroke color using RGB values." },
    "setStrokeColorHSL": { "description": "Set the stroke color using HSL values." },
    "setFillStyle": { "description": "Set the fill color or style." },
    "setLineWidth": { "description": "Set the width of lines drawn by the turtle." },
    "setLineCap": { "description": "Set the style of the line ends." },
    "setFont": { "description": "Set the font for text drawing." },
    "setTextAlign": { "description": "Set the alignment for text drawing." },
    "setTextBaseline": { "description": "Set the baseline for text drawing." },
    "setPosition": { "description": "Set the turtle's position on the canvas." },
    "setSpeed": { "description": "Set the turtle's movement speed." },
    "setSize": { "description": "Set the turtle's size." },
    "setImage": { "description": "Set a custom image for the turtle." },
    "setIcon": { "description": "Set a custom icon for the turtle." },
    "sleep": { "description": "Pause execution for a number of milliseconds." },
    "eval": { "description": "Evaluate a JavaScript function." },
    "hide": { "description": "Hide the turtle from the canvas." },
    "show": { "description": "Show the turtle on the canvas." }
  },
  "categories": {
    "movement": "Movement",
    "drawing": "Drawing",
    "visual": "Visual",
    "appearance": "Appearance",
    "programmatic": "Programming",
    "custom": "Custom"
  },
  "ui": {
    "availableCommands": "Available Commands",
    "commands": "commands",
    "parameters": "Parameters",
    "examples": "Examples",
    "aliases": "Aliases",
    "required": "required",
    "optional": "optional",
    "commandHistory": "Command History",
    "reset": "Reset",
    "runButton": "Run!",
    "commandInputPlaceholder": "Enter command e.g., forward(100)",
    "appTitle": "Turtle Storm ‚ö°Ô∏èüê¢‚ö°Ô∏è",
    "languageEnglish": "English",
    "languagePolish": "Polski",
    "movement": "Movement",
    "drawing": "Drawing",
    "visual": "Visual",
    "appearance": "Appearance",
    "programmatic": "Programming",
    "custom": "Custom",
    "validation": {
      "invalidFormat": "Invalid command format. Expected: functionName(arg1, arg2, ...)",
      "unknownCommand": "Unknown command: {command}",
      "tooFewArgs": "Too few arguments for {command}. Expected at least {expected}, got {actual}",
      "tooManyArgs": "Too many arguments for {command}. Expected at most {expected}, got {actual}",
      "invalidType": "Invalid {type} value for parameter {param}: {value}",
      "commandExecuted": "Command executed successfully"
    }
  }
} 